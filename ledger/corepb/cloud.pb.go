// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v6.31.1
// source: corepb/cloud.proto

package corepb

import (
	x "github.com/evrblk/monstera/x"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*ReadRequest_GetTransactionRequest
	//	*ReadRequest_ListTransactionsRequest
	//	*ReadRequest_GetAccountRequest
	Request       isReadRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	mi := &file_corepb_cloud_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_corepb_cloud_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_corepb_cloud_proto_rawDescGZIP(), []int{0}
}

func (x *ReadRequest) GetRequest() isReadRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *ReadRequest) GetGetTransactionRequest() *GetTransactionRequest {
	if x != nil {
		if x, ok := x.Request.(*ReadRequest_GetTransactionRequest); ok {
			return x.GetTransactionRequest
		}
	}
	return nil
}

func (x *ReadRequest) GetListTransactionsRequest() *ListTransactionsRequest {
	if x != nil {
		if x, ok := x.Request.(*ReadRequest_ListTransactionsRequest); ok {
			return x.ListTransactionsRequest
		}
	}
	return nil
}

func (x *ReadRequest) GetGetAccountRequest() *GetAccountRequest {
	if x != nil {
		if x, ok := x.Request.(*ReadRequest_GetAccountRequest); ok {
			return x.GetAccountRequest
		}
	}
	return nil
}

type isReadRequest_Request interface {
	isReadRequest_Request()
}

type ReadRequest_GetTransactionRequest struct {
	GetTransactionRequest *GetTransactionRequest `protobuf:"bytes,2,opt,name=get_transaction_request,json=getTransactionRequest,proto3,oneof"`
}

type ReadRequest_ListTransactionsRequest struct {
	ListTransactionsRequest *ListTransactionsRequest `protobuf:"bytes,3,opt,name=list_transactions_request,json=listTransactionsRequest,proto3,oneof"`
}

type ReadRequest_GetAccountRequest struct {
	GetAccountRequest *GetAccountRequest `protobuf:"bytes,4,opt,name=get_account_request,json=getAccountRequest,proto3,oneof"`
}

func (*ReadRequest_GetTransactionRequest) isReadRequest_Request() {}

func (*ReadRequest_ListTransactionsRequest) isReadRequest_Request() {}

func (*ReadRequest_GetAccountRequest) isReadRequest_Request() {}

type ReadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Error *x.Error               `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// Types that are valid to be assigned to Response:
	//
	//	*ReadResponse_GetTransactionResponse
	//	*ReadResponse_ListTransactionsResponse
	//	*ReadResponse_GetAccountResponse
	Response      isReadResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	mi := &file_corepb_cloud_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_corepb_cloud_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_corepb_cloud_proto_rawDescGZIP(), []int{1}
}

func (x *ReadResponse) GetError() *x.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ReadResponse) GetResponse() isReadResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ReadResponse) GetGetTransactionResponse() *GetTransactionResponse {
	if x != nil {
		if x, ok := x.Response.(*ReadResponse_GetTransactionResponse); ok {
			return x.GetTransactionResponse
		}
	}
	return nil
}

func (x *ReadResponse) GetListTransactionsResponse() *ListTransactionsResponse {
	if x != nil {
		if x, ok := x.Response.(*ReadResponse_ListTransactionsResponse); ok {
			return x.ListTransactionsResponse
		}
	}
	return nil
}

func (x *ReadResponse) GetGetAccountResponse() *GetAccountResponse {
	if x != nil {
		if x, ok := x.Response.(*ReadResponse_GetAccountResponse); ok {
			return x.GetAccountResponse
		}
	}
	return nil
}

type isReadResponse_Response interface {
	isReadResponse_Response()
}

type ReadResponse_GetTransactionResponse struct {
	GetTransactionResponse *GetTransactionResponse `protobuf:"bytes,2,opt,name=get_transaction_response,json=getTransactionResponse,proto3,oneof"`
}

type ReadResponse_ListTransactionsResponse struct {
	ListTransactionsResponse *ListTransactionsResponse `protobuf:"bytes,3,opt,name=list_transactions_response,json=listTransactionsResponse,proto3,oneof"`
}

type ReadResponse_GetAccountResponse struct {
	GetAccountResponse *GetAccountResponse `protobuf:"bytes,4,opt,name=get_account_response,json=getAccountResponse,proto3,oneof"`
}

func (*ReadResponse_GetTransactionResponse) isReadResponse_Response() {}

func (*ReadResponse_ListTransactionsResponse) isReadResponse_Response() {}

func (*ReadResponse_GetAccountResponse) isReadResponse_Response() {}

type UpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*UpdateRequest_CreateTransactionRequest
	//	*UpdateRequest_CancelTransactionRequest
	//	*UpdateRequest_SettleTransactionRequest
	//	*UpdateRequest_CreateAccountRequest
	Request       isUpdateRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	mi := &file_corepb_cloud_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_corepb_cloud_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_corepb_cloud_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateRequest) GetRequest() isUpdateRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *UpdateRequest) GetCreateTransactionRequest() *CreateTransactionRequest {
	if x != nil {
		if x, ok := x.Request.(*UpdateRequest_CreateTransactionRequest); ok {
			return x.CreateTransactionRequest
		}
	}
	return nil
}

func (x *UpdateRequest) GetCancelTransactionRequest() *CancelTransactionRequest {
	if x != nil {
		if x, ok := x.Request.(*UpdateRequest_CancelTransactionRequest); ok {
			return x.CancelTransactionRequest
		}
	}
	return nil
}

func (x *UpdateRequest) GetSettleTransactionRequest() *SettleTransactionRequest {
	if x != nil {
		if x, ok := x.Request.(*UpdateRequest_SettleTransactionRequest); ok {
			return x.SettleTransactionRequest
		}
	}
	return nil
}

func (x *UpdateRequest) GetCreateAccountRequest() *CreateAccountRequest {
	if x != nil {
		if x, ok := x.Request.(*UpdateRequest_CreateAccountRequest); ok {
			return x.CreateAccountRequest
		}
	}
	return nil
}

type isUpdateRequest_Request interface {
	isUpdateRequest_Request()
}

type UpdateRequest_CreateTransactionRequest struct {
	CreateTransactionRequest *CreateTransactionRequest `protobuf:"bytes,2,opt,name=create_transaction_request,json=createTransactionRequest,proto3,oneof"`
}

type UpdateRequest_CancelTransactionRequest struct {
	CancelTransactionRequest *CancelTransactionRequest `protobuf:"bytes,3,opt,name=cancel_transaction_request,json=cancelTransactionRequest,proto3,oneof"`
}

type UpdateRequest_SettleTransactionRequest struct {
	SettleTransactionRequest *SettleTransactionRequest `protobuf:"bytes,4,opt,name=settle_transaction_request,json=settleTransactionRequest,proto3,oneof"`
}

type UpdateRequest_CreateAccountRequest struct {
	CreateAccountRequest *CreateAccountRequest `protobuf:"bytes,5,opt,name=create_account_request,json=createAccountRequest,proto3,oneof"`
}

func (*UpdateRequest_CreateTransactionRequest) isUpdateRequest_Request() {}

func (*UpdateRequest_CancelTransactionRequest) isUpdateRequest_Request() {}

func (*UpdateRequest_SettleTransactionRequest) isUpdateRequest_Request() {}

func (*UpdateRequest_CreateAccountRequest) isUpdateRequest_Request() {}

type UpdateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Error *x.Error               `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// Types that are valid to be assigned to Response:
	//
	//	*UpdateResponse_CreateTransactionResponse
	//	*UpdateResponse_CancelTransactionResponse
	//	*UpdateResponse_SettleTransactionResponse
	//	*UpdateResponse_CreateAccountResponse
	Response      isUpdateResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	mi := &file_corepb_cloud_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_corepb_cloud_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_corepb_cloud_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateResponse) GetError() *x.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *UpdateResponse) GetResponse() isUpdateResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *UpdateResponse) GetCreateTransactionResponse() *CreateTransactionResponse {
	if x != nil {
		if x, ok := x.Response.(*UpdateResponse_CreateTransactionResponse); ok {
			return x.CreateTransactionResponse
		}
	}
	return nil
}

func (x *UpdateResponse) GetCancelTransactionResponse() *CancelTransactionResponse {
	if x != nil {
		if x, ok := x.Response.(*UpdateResponse_CancelTransactionResponse); ok {
			return x.CancelTransactionResponse
		}
	}
	return nil
}

func (x *UpdateResponse) GetSettleTransactionResponse() *SettleTransactionResponse {
	if x != nil {
		if x, ok := x.Response.(*UpdateResponse_SettleTransactionResponse); ok {
			return x.SettleTransactionResponse
		}
	}
	return nil
}

func (x *UpdateResponse) GetCreateAccountResponse() *CreateAccountResponse {
	if x != nil {
		if x, ok := x.Response.(*UpdateResponse_CreateAccountResponse); ok {
			return x.CreateAccountResponse
		}
	}
	return nil
}

type isUpdateResponse_Response interface {
	isUpdateResponse_Response()
}

type UpdateResponse_CreateTransactionResponse struct {
	CreateTransactionResponse *CreateTransactionResponse `protobuf:"bytes,2,opt,name=create_transaction_response,json=createTransactionResponse,proto3,oneof"`
}

type UpdateResponse_CancelTransactionResponse struct {
	CancelTransactionResponse *CancelTransactionResponse `protobuf:"bytes,3,opt,name=cancel_transaction_response,json=cancelTransactionResponse,proto3,oneof"`
}

type UpdateResponse_SettleTransactionResponse struct {
	SettleTransactionResponse *SettleTransactionResponse `protobuf:"bytes,4,opt,name=settle_transaction_response,json=settleTransactionResponse,proto3,oneof"`
}

type UpdateResponse_CreateAccountResponse struct {
	CreateAccountResponse *CreateAccountResponse `protobuf:"bytes,5,opt,name=create_account_response,json=createAccountResponse,proto3,oneof"`
}

func (*UpdateResponse_CreateTransactionResponse) isUpdateResponse_Response() {}

func (*UpdateResponse_CancelTransactionResponse) isUpdateResponse_Response() {}

func (*UpdateResponse_SettleTransactionResponse) isUpdateResponse_Response() {}

func (*UpdateResponse_CreateAccountResponse) isUpdateResponse_Response() {}

var File_corepb_cloud_proto protoreflect.FileDescriptor

var file_corepb_cloud_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x29, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b,
	0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x1a,
	0x10, 0x63, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0e, 0x78, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x8d, 0x03, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x7a, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e,
	0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x15, 0x67, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x80, 0x01,
	0x0a, 0x19, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d,
	0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x17, 0x6c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x6e, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x67,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x04, 0x08, 0x01, 0x10,
	0x02, 0x22, 0xce, 0x03, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d,
	0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61,
	0x78, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x7d,
	0x0a, 0x18, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f,
	0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x16, 0x67, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01,
	0x0a, 0x1a, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e,
	0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x18, 0x6c, 0x69, 0x73, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d,
	0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x12, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xab, 0x04, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x83, 0x01, 0x0a, 0x1a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x18, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x83, 0x01, 0x0a, 0x1a, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e,
	0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x18, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x83, 0x01, 0x0a, 0x1a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62,
	0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x18, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x77, 0x0a, 0x16, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72,
	0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02,
	0x22, 0xef, 0x04, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e,
	0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72,
	0x61, 0x78, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x86, 0x01, 0x0a, 0x1b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62,
	0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x70,
	0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x19, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x1b, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73,
	0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x19, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x86, 0x01, 0x0a, 0x1b, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76,
	0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x19, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x17, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72,
	0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2f, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61,
	0x2d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_corepb_cloud_proto_rawDescOnce sync.Once
	file_corepb_cloud_proto_rawDescData = file_corepb_cloud_proto_rawDesc
)

func file_corepb_cloud_proto_rawDescGZIP() []byte {
	file_corepb_cloud_proto_rawDescOnce.Do(func() {
		file_corepb_cloud_proto_rawDescData = protoimpl.X.CompressGZIP(file_corepb_cloud_proto_rawDescData)
	})
	return file_corepb_cloud_proto_rawDescData
}

var file_corepb_cloud_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_corepb_cloud_proto_goTypes = []any{
	(*ReadRequest)(nil),               // 0: com.evrblk.monstera_example.ledger.corepb.ReadRequest
	(*ReadResponse)(nil),              // 1: com.evrblk.monstera_example.ledger.corepb.ReadResponse
	(*UpdateRequest)(nil),             // 2: com.evrblk.monstera_example.ledger.corepb.UpdateRequest
	(*UpdateResponse)(nil),            // 3: com.evrblk.monstera_example.ledger.corepb.UpdateResponse
	(*GetTransactionRequest)(nil),     // 4: com.evrblk.monstera_example.ledger.corepb.GetTransactionRequest
	(*ListTransactionsRequest)(nil),   // 5: com.evrblk.monstera_example.ledger.corepb.ListTransactionsRequest
	(*GetAccountRequest)(nil),         // 6: com.evrblk.monstera_example.ledger.corepb.GetAccountRequest
	(*x.Error)(nil),                   // 7: com.evrblk.monstera.monsterax.Error
	(*GetTransactionResponse)(nil),    // 8: com.evrblk.monstera_example.ledger.corepb.GetTransactionResponse
	(*ListTransactionsResponse)(nil),  // 9: com.evrblk.monstera_example.ledger.corepb.ListTransactionsResponse
	(*GetAccountResponse)(nil),        // 10: com.evrblk.monstera_example.ledger.corepb.GetAccountResponse
	(*CreateTransactionRequest)(nil),  // 11: com.evrblk.monstera_example.ledger.corepb.CreateTransactionRequest
	(*CancelTransactionRequest)(nil),  // 12: com.evrblk.monstera_example.ledger.corepb.CancelTransactionRequest
	(*SettleTransactionRequest)(nil),  // 13: com.evrblk.monstera_example.ledger.corepb.SettleTransactionRequest
	(*CreateAccountRequest)(nil),      // 14: com.evrblk.monstera_example.ledger.corepb.CreateAccountRequest
	(*CreateTransactionResponse)(nil), // 15: com.evrblk.monstera_example.ledger.corepb.CreateTransactionResponse
	(*CancelTransactionResponse)(nil), // 16: com.evrblk.monstera_example.ledger.corepb.CancelTransactionResponse
	(*SettleTransactionResponse)(nil), // 17: com.evrblk.monstera_example.ledger.corepb.SettleTransactionResponse
	(*CreateAccountResponse)(nil),     // 18: com.evrblk.monstera_example.ledger.corepb.CreateAccountResponse
}
var file_corepb_cloud_proto_depIdxs = []int32{
	4,  // 0: com.evrblk.monstera_example.ledger.corepb.ReadRequest.get_transaction_request:type_name -> com.evrblk.monstera_example.ledger.corepb.GetTransactionRequest
	5,  // 1: com.evrblk.monstera_example.ledger.corepb.ReadRequest.list_transactions_request:type_name -> com.evrblk.monstera_example.ledger.corepb.ListTransactionsRequest
	6,  // 2: com.evrblk.monstera_example.ledger.corepb.ReadRequest.get_account_request:type_name -> com.evrblk.monstera_example.ledger.corepb.GetAccountRequest
	7,  // 3: com.evrblk.monstera_example.ledger.corepb.ReadResponse.error:type_name -> com.evrblk.monstera.monsterax.Error
	8,  // 4: com.evrblk.monstera_example.ledger.corepb.ReadResponse.get_transaction_response:type_name -> com.evrblk.monstera_example.ledger.corepb.GetTransactionResponse
	9,  // 5: com.evrblk.monstera_example.ledger.corepb.ReadResponse.list_transactions_response:type_name -> com.evrblk.monstera_example.ledger.corepb.ListTransactionsResponse
	10, // 6: com.evrblk.monstera_example.ledger.corepb.ReadResponse.get_account_response:type_name -> com.evrblk.monstera_example.ledger.corepb.GetAccountResponse
	11, // 7: com.evrblk.monstera_example.ledger.corepb.UpdateRequest.create_transaction_request:type_name -> com.evrblk.monstera_example.ledger.corepb.CreateTransactionRequest
	12, // 8: com.evrblk.monstera_example.ledger.corepb.UpdateRequest.cancel_transaction_request:type_name -> com.evrblk.monstera_example.ledger.corepb.CancelTransactionRequest
	13, // 9: com.evrblk.monstera_example.ledger.corepb.UpdateRequest.settle_transaction_request:type_name -> com.evrblk.monstera_example.ledger.corepb.SettleTransactionRequest
	14, // 10: com.evrblk.monstera_example.ledger.corepb.UpdateRequest.create_account_request:type_name -> com.evrblk.monstera_example.ledger.corepb.CreateAccountRequest
	7,  // 11: com.evrblk.monstera_example.ledger.corepb.UpdateResponse.error:type_name -> com.evrblk.monstera.monsterax.Error
	15, // 12: com.evrblk.monstera_example.ledger.corepb.UpdateResponse.create_transaction_response:type_name -> com.evrblk.monstera_example.ledger.corepb.CreateTransactionResponse
	16, // 13: com.evrblk.monstera_example.ledger.corepb.UpdateResponse.cancel_transaction_response:type_name -> com.evrblk.monstera_example.ledger.corepb.CancelTransactionResponse
	17, // 14: com.evrblk.monstera_example.ledger.corepb.UpdateResponse.settle_transaction_response:type_name -> com.evrblk.monstera_example.ledger.corepb.SettleTransactionResponse
	18, // 15: com.evrblk.monstera_example.ledger.corepb.UpdateResponse.create_account_response:type_name -> com.evrblk.monstera_example.ledger.corepb.CreateAccountResponse
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_corepb_cloud_proto_init() }
func file_corepb_cloud_proto_init() {
	if File_corepb_cloud_proto != nil {
		return
	}
	file_corepb_api_proto_init()
	file_corepb_cloud_proto_msgTypes[0].OneofWrappers = []any{
		(*ReadRequest_GetTransactionRequest)(nil),
		(*ReadRequest_ListTransactionsRequest)(nil),
		(*ReadRequest_GetAccountRequest)(nil),
	}
	file_corepb_cloud_proto_msgTypes[1].OneofWrappers = []any{
		(*ReadResponse_GetTransactionResponse)(nil),
		(*ReadResponse_ListTransactionsResponse)(nil),
		(*ReadResponse_GetAccountResponse)(nil),
	}
	file_corepb_cloud_proto_msgTypes[2].OneofWrappers = []any{
		(*UpdateRequest_CreateTransactionRequest)(nil),
		(*UpdateRequest_CancelTransactionRequest)(nil),
		(*UpdateRequest_SettleTransactionRequest)(nil),
		(*UpdateRequest_CreateAccountRequest)(nil),
	}
	file_corepb_cloud_proto_msgTypes[3].OneofWrappers = []any{
		(*UpdateResponse_CreateTransactionResponse)(nil),
		(*UpdateResponse_CancelTransactionResponse)(nil),
		(*UpdateResponse_SettleTransactionResponse)(nil),
		(*UpdateResponse_CreateAccountResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_corepb_cloud_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_corepb_cloud_proto_goTypes,
		DependencyIndexes: file_corepb_cloud_proto_depIdxs,
		MessageInfos:      file_corepb_cloud_proto_msgTypes,
	}.Build()
	File_corepb_cloud_proto = out.File
	file_corepb_cloud_proto_rawDesc = nil
	file_corepb_cloud_proto_goTypes = nil
	file_corepb_cloud_proto_depIdxs = nil
}
