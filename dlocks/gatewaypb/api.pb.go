// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v6.31.1
// source: gatewaypb/api.proto

package gatewaypb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LockState int32

const (
	LockState_UNLOCKED     LockState = 0
	LockState_READ_LOCKED  LockState = 1
	LockState_WRITE_LOCKED LockState = 2
)

// Enum value maps for LockState.
var (
	LockState_name = map[int32]string{
		0: "UNLOCKED",
		1: "READ_LOCKED",
		2: "WRITE_LOCKED",
	}
	LockState_value = map[string]int32{
		"UNLOCKED":     0,
		"READ_LOCKED":  1,
		"WRITE_LOCKED": 2,
	}
)

func (x LockState) Enum() *LockState {
	p := new(LockState)
	*p = x
	return p
}

func (x LockState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LockState) Descriptor() protoreflect.EnumDescriptor {
	return file_gatewaypb_api_proto_enumTypes[0].Descriptor()
}

func (LockState) Type() protoreflect.EnumType {
	return &file_gatewaypb_api_proto_enumTypes[0]
}

func (x LockState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LockState.Descriptor instead.
func (LockState) EnumDescriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{0}
}

type CreateNamespaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNamespaceRequest) Reset() {
	*x = CreateNamespaceRequest{}
	mi := &file_gatewaypb_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceRequest) ProtoMessage() {}

func (x *CreateNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceRequest.ProtoReflect.Descriptor instead.
func (*CreateNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNamespaceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNamespaceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateNamespaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     *Namespace             `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNamespaceResponse) Reset() {
	*x = CreateNamespaceResponse{}
	mi := &file_gatewaypb_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceResponse) ProtoMessage() {}

func (x *CreateNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceResponse.ProtoReflect.Descriptor instead.
func (*CreateNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNamespaceResponse) GetNamespace() *Namespace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

type ListNamespacesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNamespacesRequest) Reset() {
	*x = ListNamespacesRequest{}
	mi := &file_gatewaypb_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNamespacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespacesRequest) ProtoMessage() {}

func (x *ListNamespacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespacesRequest.ProtoReflect.Descriptor instead.
func (*ListNamespacesRequest) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{2}
}

type ListNamespacesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespaces    []*Namespace           `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNamespacesResponse) Reset() {
	*x = ListNamespacesResponse{}
	mi := &file_gatewaypb_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNamespacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespacesResponse) ProtoMessage() {}

func (x *ListNamespacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespacesResponse.ProtoReflect.Descriptor instead.
func (*ListNamespacesResponse) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{3}
}

func (x *ListNamespacesResponse) GetNamespaces() []*Namespace {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

type GetNamespaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNamespaceRequest) Reset() {
	*x = GetNamespaceRequest{}
	mi := &file_gatewaypb_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceRequest) ProtoMessage() {}

func (x *GetNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceRequest.ProtoReflect.Descriptor instead.
func (*GetNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{4}
}

func (x *GetNamespaceRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

type GetNamespaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     *Namespace             `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNamespaceResponse) Reset() {
	*x = GetNamespaceResponse{}
	mi := &file_gatewaypb_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceResponse) ProtoMessage() {}

func (x *GetNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceResponse.ProtoReflect.Descriptor instead.
func (*GetNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{5}
}

func (x *GetNamespaceResponse) GetNamespace() *Namespace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

type DeleteNamespaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNamespaceRequest) Reset() {
	*x = DeleteNamespaceRequest{}
	mi := &file_gatewaypb_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNamespaceRequest) ProtoMessage() {}

func (x *DeleteNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNamespaceRequest.ProtoReflect.Descriptor instead.
func (*DeleteNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteNamespaceRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

type DeleteNamespaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNamespaceResponse) Reset() {
	*x = DeleteNamespaceResponse{}
	mi := &file_gatewaypb_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNamespaceResponse) ProtoMessage() {}

func (x *DeleteNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNamespaceResponse.ProtoReflect.Descriptor instead.
func (*DeleteNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{7}
}

type UpdateNamespaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNamespaceRequest) Reset() {
	*x = UpdateNamespaceRequest{}
	mi := &file_gatewaypb_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNamespaceRequest) ProtoMessage() {}

func (x *UpdateNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNamespaceRequest.ProtoReflect.Descriptor instead.
func (*UpdateNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateNamespaceRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *UpdateNamespaceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateNamespaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     *Namespace             `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNamespaceResponse) Reset() {
	*x = UpdateNamespaceResponse{}
	mi := &file_gatewaypb_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNamespaceResponse) ProtoMessage() {}

func (x *UpdateNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNamespaceResponse.ProtoReflect.Descriptor instead.
func (*UpdateNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateNamespaceResponse) GetNamespace() *Namespace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

type AcquireLockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	LockName      string                 `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
	ProcessId     string                 `protobuf:"bytes,3,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	WriteLock     bool                   `protobuf:"varint,4,opt,name=write_lock,json=writeLock,proto3" json:"write_lock,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcquireLockRequest) Reset() {
	*x = AcquireLockRequest{}
	mi := &file_gatewaypb_api_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcquireLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireLockRequest) ProtoMessage() {}

func (x *AcquireLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireLockRequest.ProtoReflect.Descriptor instead.
func (*AcquireLockRequest) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{10}
}

func (x *AcquireLockRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *AcquireLockRequest) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

func (x *AcquireLockRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *AcquireLockRequest) GetWriteLock() bool {
	if x != nil {
		return x.WriteLock
	}
	return false
}

func (x *AcquireLockRequest) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type AcquireLockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lock          *Lock                  `protobuf:"bytes,1,opt,name=lock,proto3" json:"lock,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcquireLockResponse) Reset() {
	*x = AcquireLockResponse{}
	mi := &file_gatewaypb_api_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcquireLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireLockResponse) ProtoMessage() {}

func (x *AcquireLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireLockResponse.ProtoReflect.Descriptor instead.
func (*AcquireLockResponse) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{11}
}

func (x *AcquireLockResponse) GetLock() *Lock {
	if x != nil {
		return x.Lock
	}
	return nil
}

func (x *AcquireLockResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ReleaseLockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	LockName      string                 `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
	ProcessId     string                 `protobuf:"bytes,3,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseLockRequest) Reset() {
	*x = ReleaseLockRequest{}
	mi := &file_gatewaypb_api_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseLockRequest) ProtoMessage() {}

func (x *ReleaseLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseLockRequest.ProtoReflect.Descriptor instead.
func (*ReleaseLockRequest) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{12}
}

func (x *ReleaseLockRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *ReleaseLockRequest) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

func (x *ReleaseLockRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

type ReleaseLockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lock          *Lock                  `protobuf:"bytes,1,opt,name=lock,proto3" json:"lock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseLockResponse) Reset() {
	*x = ReleaseLockResponse{}
	mi := &file_gatewaypb_api_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseLockResponse) ProtoMessage() {}

func (x *ReleaseLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseLockResponse.ProtoReflect.Descriptor instead.
func (*ReleaseLockResponse) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{13}
}

func (x *ReleaseLockResponse) GetLock() *Lock {
	if x != nil {
		return x.Lock
	}
	return nil
}

type GetLockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	LockName      string                 `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLockRequest) Reset() {
	*x = GetLockRequest{}
	mi := &file_gatewaypb_api_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLockRequest) ProtoMessage() {}

func (x *GetLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLockRequest.ProtoReflect.Descriptor instead.
func (*GetLockRequest) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{14}
}

func (x *GetLockRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *GetLockRequest) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

type GetLockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lock          *Lock                  `protobuf:"bytes,1,opt,name=lock,proto3" json:"lock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLockResponse) Reset() {
	*x = GetLockResponse{}
	mi := &file_gatewaypb_api_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLockResponse) ProtoMessage() {}

func (x *GetLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLockResponse.ProtoReflect.Descriptor instead.
func (*GetLockResponse) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{15}
}

func (x *GetLockResponse) GetLock() *Lock {
	if x != nil {
		return x.Lock
	}
	return nil
}

type DeleteLockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	LockName      string                 `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLockRequest) Reset() {
	*x = DeleteLockRequest{}
	mi := &file_gatewaypb_api_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLockRequest) ProtoMessage() {}

func (x *DeleteLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLockRequest.ProtoReflect.Descriptor instead.
func (*DeleteLockRequest) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteLockRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *DeleteLockRequest) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

type DeleteLockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLockResponse) Reset() {
	*x = DeleteLockResponse{}
	mi := &file_gatewaypb_api_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLockResponse) ProtoMessage() {}

func (x *DeleteLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLockResponse.ProtoReflect.Descriptor instead.
func (*DeleteLockResponse) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{17}
}

type Lock struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State           LockState              `protobuf:"varint,2,opt,name=state,proto3,enum=com.evrblk.monstera_example.gatewaypb.LockState" json:"state,omitempty"`
	LockedAt        int64                  `protobuf:"varint,3,opt,name=locked_at,json=lockedAt,proto3" json:"locked_at,omitempty"`
	WriteLockHolder *LockHolder            `protobuf:"bytes,4,opt,name=write_lock_holder,json=writeLockHolder,proto3" json:"write_lock_holder,omitempty"`
	ReadLockHolders []*LockHolder          `protobuf:"bytes,5,rep,name=read_lock_holders,json=readLockHolders,proto3" json:"read_lock_holders,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Lock) Reset() {
	*x = Lock{}
	mi := &file_gatewaypb_api_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lock) ProtoMessage() {}

func (x *Lock) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lock.ProtoReflect.Descriptor instead.
func (*Lock) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{18}
}

func (x *Lock) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Lock) GetState() LockState {
	if x != nil {
		return x.State
	}
	return LockState_UNLOCKED
}

func (x *Lock) GetLockedAt() int64 {
	if x != nil {
		return x.LockedAt
	}
	return 0
}

func (x *Lock) GetWriteLockHolder() *LockHolder {
	if x != nil {
		return x.WriteLockHolder
	}
	return nil
}

func (x *Lock) GetReadLockHolders() []*LockHolder {
	if x != nil {
		return x.ReadLockHolders
	}
	return nil
}

type LockHolder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessId     string                 `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	LockedAt      int64                  `protobuf:"varint,2,opt,name=locked_at,json=lockedAt,proto3" json:"locked_at,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockHolder) Reset() {
	*x = LockHolder{}
	mi := &file_gatewaypb_api_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockHolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockHolder) ProtoMessage() {}

func (x *LockHolder) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockHolder.ProtoReflect.Descriptor instead.
func (*LockHolder) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{19}
}

func (x *LockHolder) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *LockHolder) GetLockedAt() int64 {
	if x != nil {
		return x.LockedAt
	}
	return 0
}

func (x *LockHolder) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type Namespace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	mi := &file_gatewaypb_api_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_gatewaypb_api_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_gatewaypb_api_proto_rawDescGZIP(), []int{20}
}

func (x *Namespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Namespace) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Namespace) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Namespace) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_gatewaypb_api_proto protoreflect.FileDescriptor

var file_gatewaypb_api_proto_rawDesc = []byte{
	0x0a, 0x13, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2f, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c,
	0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x22, 0x4e, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x17,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61,
	0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x6a, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0a, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73,
	0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62,
	0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x22, 0x3f, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x69, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e,
	0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0xb5, 0x01, 0x0a,
	0x12, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x41, 0x74, 0x22, 0x70, 0x0a, 0x13, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70,
	0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x77, 0x0a, 0x12, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22,
	0x56, 0x0a, 0x13, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c,
	0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63,
	0x6b, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x54, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3f, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73,
	0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x6c, 0x6f, 0x63,
	0x6b, 0x22, 0x57, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xbd, 0x02, 0x0a, 0x04, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x5d, 0x0a, 0x11, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x52, 0x0f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x48, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x12, 0x5d, 0x0a, 0x11, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52,
	0x0f, 0x72, 0x65, 0x61, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x22, 0x67, 0x0a, 0x0a, 0x4c, 0x6f, 0x63, 0x6b, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0x7f, 0x0a, 0x09, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0x3c, 0x0a, 0x09, 0x4c, 0x6f,
	0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4e, 0x4c, 0x4f, 0x43,
	0x4b, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x4c, 0x4f,
	0x43, 0x4b, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f,
	0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x02, 0x32, 0x82, 0x0a, 0x0a, 0x0f, 0x4c, 0x6f, 0x63,
	0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x70, 0x69, 0x12, 0x92, 0x01, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f,
	0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e,
	0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x8f, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x12, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c,
	0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e,
	0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c,
	0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f,
	0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x92, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b,
	0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e,
	0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x92, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65,
	0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76,
	0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x0b, 0x41, 0x63,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70,
	0x62, 0x2e, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c,
	0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x6f,
	0x63, 0x6b, 0x12, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e,
	0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72,
	0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72,
	0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x72, 0x62, 0x6c, 0x6b, 0x2e, 0x6d, 0x6f,
	0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2e, 0x5a,
	0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x76, 0x72, 0x62,
	0x6c, 0x6b, 0x2f, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x61, 0x2d, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gatewaypb_api_proto_rawDescOnce sync.Once
	file_gatewaypb_api_proto_rawDescData = file_gatewaypb_api_proto_rawDesc
)

func file_gatewaypb_api_proto_rawDescGZIP() []byte {
	file_gatewaypb_api_proto_rawDescOnce.Do(func() {
		file_gatewaypb_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_gatewaypb_api_proto_rawDescData)
	})
	return file_gatewaypb_api_proto_rawDescData
}

var file_gatewaypb_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gatewaypb_api_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_gatewaypb_api_proto_goTypes = []any{
	(LockState)(0),                  // 0: com.evrblk.monstera_example.gatewaypb.LockState
	(*CreateNamespaceRequest)(nil),  // 1: com.evrblk.monstera_example.gatewaypb.CreateNamespaceRequest
	(*CreateNamespaceResponse)(nil), // 2: com.evrblk.monstera_example.gatewaypb.CreateNamespaceResponse
	(*ListNamespacesRequest)(nil),   // 3: com.evrblk.monstera_example.gatewaypb.ListNamespacesRequest
	(*ListNamespacesResponse)(nil),  // 4: com.evrblk.monstera_example.gatewaypb.ListNamespacesResponse
	(*GetNamespaceRequest)(nil),     // 5: com.evrblk.monstera_example.gatewaypb.GetNamespaceRequest
	(*GetNamespaceResponse)(nil),    // 6: com.evrblk.monstera_example.gatewaypb.GetNamespaceResponse
	(*DeleteNamespaceRequest)(nil),  // 7: com.evrblk.monstera_example.gatewaypb.DeleteNamespaceRequest
	(*DeleteNamespaceResponse)(nil), // 8: com.evrblk.monstera_example.gatewaypb.DeleteNamespaceResponse
	(*UpdateNamespaceRequest)(nil),  // 9: com.evrblk.monstera_example.gatewaypb.UpdateNamespaceRequest
	(*UpdateNamespaceResponse)(nil), // 10: com.evrblk.monstera_example.gatewaypb.UpdateNamespaceResponse
	(*AcquireLockRequest)(nil),      // 11: com.evrblk.monstera_example.gatewaypb.AcquireLockRequest
	(*AcquireLockResponse)(nil),     // 12: com.evrblk.monstera_example.gatewaypb.AcquireLockResponse
	(*ReleaseLockRequest)(nil),      // 13: com.evrblk.monstera_example.gatewaypb.ReleaseLockRequest
	(*ReleaseLockResponse)(nil),     // 14: com.evrblk.monstera_example.gatewaypb.ReleaseLockResponse
	(*GetLockRequest)(nil),          // 15: com.evrblk.monstera_example.gatewaypb.GetLockRequest
	(*GetLockResponse)(nil),         // 16: com.evrblk.monstera_example.gatewaypb.GetLockResponse
	(*DeleteLockRequest)(nil),       // 17: com.evrblk.monstera_example.gatewaypb.DeleteLockRequest
	(*DeleteLockResponse)(nil),      // 18: com.evrblk.monstera_example.gatewaypb.DeleteLockResponse
	(*Lock)(nil),                    // 19: com.evrblk.monstera_example.gatewaypb.Lock
	(*LockHolder)(nil),              // 20: com.evrblk.monstera_example.gatewaypb.LockHolder
	(*Namespace)(nil),               // 21: com.evrblk.monstera_example.gatewaypb.Namespace
}
var file_gatewaypb_api_proto_depIdxs = []int32{
	21, // 0: com.evrblk.monstera_example.gatewaypb.CreateNamespaceResponse.namespace:type_name -> com.evrblk.monstera_example.gatewaypb.Namespace
	21, // 1: com.evrblk.monstera_example.gatewaypb.ListNamespacesResponse.namespaces:type_name -> com.evrblk.monstera_example.gatewaypb.Namespace
	21, // 2: com.evrblk.monstera_example.gatewaypb.GetNamespaceResponse.namespace:type_name -> com.evrblk.monstera_example.gatewaypb.Namespace
	21, // 3: com.evrblk.monstera_example.gatewaypb.UpdateNamespaceResponse.namespace:type_name -> com.evrblk.monstera_example.gatewaypb.Namespace
	19, // 4: com.evrblk.monstera_example.gatewaypb.AcquireLockResponse.lock:type_name -> com.evrblk.monstera_example.gatewaypb.Lock
	19, // 5: com.evrblk.monstera_example.gatewaypb.ReleaseLockResponse.lock:type_name -> com.evrblk.monstera_example.gatewaypb.Lock
	19, // 6: com.evrblk.monstera_example.gatewaypb.GetLockResponse.lock:type_name -> com.evrblk.monstera_example.gatewaypb.Lock
	0,  // 7: com.evrblk.monstera_example.gatewaypb.Lock.state:type_name -> com.evrblk.monstera_example.gatewaypb.LockState
	20, // 8: com.evrblk.monstera_example.gatewaypb.Lock.write_lock_holder:type_name -> com.evrblk.monstera_example.gatewaypb.LockHolder
	20, // 9: com.evrblk.monstera_example.gatewaypb.Lock.read_lock_holders:type_name -> com.evrblk.monstera_example.gatewaypb.LockHolder
	1,  // 10: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.CreateNamespace:input_type -> com.evrblk.monstera_example.gatewaypb.CreateNamespaceRequest
	3,  // 11: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.ListNamespaces:input_type -> com.evrblk.monstera_example.gatewaypb.ListNamespacesRequest
	5,  // 12: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.GetNamespace:input_type -> com.evrblk.monstera_example.gatewaypb.GetNamespaceRequest
	7,  // 13: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.DeleteNamespace:input_type -> com.evrblk.monstera_example.gatewaypb.DeleteNamespaceRequest
	9,  // 14: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.UpdateNamespace:input_type -> com.evrblk.monstera_example.gatewaypb.UpdateNamespaceRequest
	11, // 15: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.AcquireLock:input_type -> com.evrblk.monstera_example.gatewaypb.AcquireLockRequest
	13, // 16: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.ReleaseLock:input_type -> com.evrblk.monstera_example.gatewaypb.ReleaseLockRequest
	15, // 17: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.GetLock:input_type -> com.evrblk.monstera_example.gatewaypb.GetLockRequest
	17, // 18: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.DeleteLock:input_type -> com.evrblk.monstera_example.gatewaypb.DeleteLockRequest
	2,  // 19: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.CreateNamespace:output_type -> com.evrblk.monstera_example.gatewaypb.CreateNamespaceResponse
	4,  // 20: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.ListNamespaces:output_type -> com.evrblk.monstera_example.gatewaypb.ListNamespacesResponse
	6,  // 21: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.GetNamespace:output_type -> com.evrblk.monstera_example.gatewaypb.GetNamespaceResponse
	8,  // 22: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.DeleteNamespace:output_type -> com.evrblk.monstera_example.gatewaypb.DeleteNamespaceResponse
	10, // 23: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.UpdateNamespace:output_type -> com.evrblk.monstera_example.gatewaypb.UpdateNamespaceResponse
	12, // 24: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.AcquireLock:output_type -> com.evrblk.monstera_example.gatewaypb.AcquireLockResponse
	14, // 25: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.ReleaseLock:output_type -> com.evrblk.monstera_example.gatewaypb.ReleaseLockResponse
	16, // 26: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.GetLock:output_type -> com.evrblk.monstera_example.gatewaypb.GetLockResponse
	18, // 27: com.evrblk.monstera_example.gatewaypb.LocksServiceApi.DeleteLock:output_type -> com.evrblk.monstera_example.gatewaypb.DeleteLockResponse
	19, // [19:28] is the sub-list for method output_type
	10, // [10:19] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_gatewaypb_api_proto_init() }
func file_gatewaypb_api_proto_init() {
	if File_gatewaypb_api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gatewaypb_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gatewaypb_api_proto_goTypes,
		DependencyIndexes: file_gatewaypb_api_proto_depIdxs,
		EnumInfos:         file_gatewaypb_api_proto_enumTypes,
		MessageInfos:      file_gatewaypb_api_proto_msgTypes,
	}.Build()
	File_gatewaypb_api_proto = out.File
	file_gatewaypb_api_proto_rawDesc = nil
	file_gatewaypb_api_proto_goTypes = nil
	file_gatewaypb_api_proto_depIdxs = nil
}
