// Code generated by `monstera generate`. DO NOT EDIT.

package dlocks

import (
	"context"
	monstera "github.com/evrblk/monstera"
	corepb "github.com/evrblk/monstera-example/dlocks/corepb"
	"io"
)

type LocksServiceCoreApi interface {
	ListAccounts(ctx context.Context, request *corepb.ListAccountsRequest) (*corepb.ListAccountsResponse, error)
	GetAccount(ctx context.Context, request *corepb.GetAccountRequest) (*corepb.GetAccountResponse, error)
	CreateAccount(ctx context.Context, request *corepb.CreateAccountRequest) (*corepb.CreateAccountResponse, error)
	UpdateAccount(ctx context.Context, request *corepb.UpdateAccountRequest) (*corepb.UpdateAccountResponse, error)
	DeleteAccount(ctx context.Context, request *corepb.DeleteAccountRequest) (*corepb.DeleteAccountResponse, error)

	GetNamespace(ctx context.Context, request *corepb.GetNamespaceRequest) (*corepb.GetNamespaceResponse, error)
	ListNamespaces(ctx context.Context, request *corepb.ListNamespacesRequest) (*corepb.ListNamespacesResponse, error)
	CreateNamespace(ctx context.Context, request *corepb.CreateNamespaceRequest) (*corepb.CreateNamespaceResponse, error)
	UpdateNamespace(ctx context.Context, request *corepb.UpdateNamespaceRequest) (*corepb.UpdateNamespaceResponse, error)
	DeleteNamespace(ctx context.Context, request *corepb.DeleteNamespaceRequest) (*corepb.DeleteNamespaceResponse, error)

	AcquireLock(ctx context.Context, request *corepb.AcquireLockRequest) (*corepb.AcquireLockResponse, error)
	ReleaseLock(ctx context.Context, request *corepb.ReleaseLockRequest) (*corepb.ReleaseLockResponse, error)
	DeleteLock(ctx context.Context, request *corepb.DeleteLockRequest) (*corepb.DeleteLockResponse, error)
	GetLock(ctx context.Context, request *corepb.GetLockRequest) (*corepb.GetLockResponse, error)
}

var _ LocksServiceCoreApi = &UnimplementedLocksServiceCoreApi{}

type UnimplementedLocksServiceCoreApi struct{}

func (a *UnimplementedLocksServiceCoreApi) ListAccounts(ctx context.Context, request *corepb.ListAccountsRequest) (*corepb.ListAccountsResponse, error) {
	panic("not implemented")
}

func (a *UnimplementedLocksServiceCoreApi) GetAccount(ctx context.Context, request *corepb.GetAccountRequest) (*corepb.GetAccountResponse, error) {
	panic("not implemented")
}

func (a *UnimplementedLocksServiceCoreApi) CreateAccount(ctx context.Context, request *corepb.CreateAccountRequest) (*corepb.CreateAccountResponse, error) {
	panic("not implemented")
}

func (a *UnimplementedLocksServiceCoreApi) UpdateAccount(ctx context.Context, request *corepb.UpdateAccountRequest) (*corepb.UpdateAccountResponse, error) {
	panic("not implemented")
}

func (a *UnimplementedLocksServiceCoreApi) DeleteAccount(ctx context.Context, request *corepb.DeleteAccountRequest) (*corepb.DeleteAccountResponse, error) {
	panic("not implemented")
}

func (a *UnimplementedLocksServiceCoreApi) GetNamespace(ctx context.Context, request *corepb.GetNamespaceRequest) (*corepb.GetNamespaceResponse, error) {
	panic("not implemented")
}

func (a *UnimplementedLocksServiceCoreApi) ListNamespaces(ctx context.Context, request *corepb.ListNamespacesRequest) (*corepb.ListNamespacesResponse, error) {
	panic("not implemented")
}

func (a *UnimplementedLocksServiceCoreApi) CreateNamespace(ctx context.Context, request *corepb.CreateNamespaceRequest) (*corepb.CreateNamespaceResponse, error) {
	panic("not implemented")
}

func (a *UnimplementedLocksServiceCoreApi) UpdateNamespace(ctx context.Context, request *corepb.UpdateNamespaceRequest) (*corepb.UpdateNamespaceResponse, error) {
	panic("not implemented")
}

func (a *UnimplementedLocksServiceCoreApi) DeleteNamespace(ctx context.Context, request *corepb.DeleteNamespaceRequest) (*corepb.DeleteNamespaceResponse, error) {
	panic("not implemented")
}

func (a *UnimplementedLocksServiceCoreApi) AcquireLock(ctx context.Context, request *corepb.AcquireLockRequest) (*corepb.AcquireLockResponse, error) {
	panic("not implemented")
}

func (a *UnimplementedLocksServiceCoreApi) ReleaseLock(ctx context.Context, request *corepb.ReleaseLockRequest) (*corepb.ReleaseLockResponse, error) {
	panic("not implemented")
}

func (a *UnimplementedLocksServiceCoreApi) DeleteLock(ctx context.Context, request *corepb.DeleteLockRequest) (*corepb.DeleteLockResponse, error) {
	panic("not implemented")
}

func (a *UnimplementedLocksServiceCoreApi) GetLock(ctx context.Context, request *corepb.GetLockRequest) (*corepb.GetLockResponse, error) {
	panic("not implemented")
}

type AccountsCoreApi interface {
	Snapshot() monstera.ApplicationCoreSnapshot
	Restore(reader io.ReadCloser) error
	Close()
	ListAccounts(request *corepb.ListAccountsRequest) (*corepb.ListAccountsResponse, error)
	GetAccount(request *corepb.GetAccountRequest) (*corepb.GetAccountResponse, error)
	CreateAccount(request *corepb.CreateAccountRequest) (*corepb.CreateAccountResponse, error)
	UpdateAccount(request *corepb.UpdateAccountRequest) (*corepb.UpdateAccountResponse, error)
	DeleteAccount(request *corepb.DeleteAccountRequest) (*corepb.DeleteAccountResponse, error)
}

type LocksCoreApi interface {
	Snapshot() monstera.ApplicationCoreSnapshot
	Restore(reader io.ReadCloser) error
	Close()
	AcquireLock(request *corepb.AcquireLockRequest) (*corepb.AcquireLockResponse, error)
	ReleaseLock(request *corepb.ReleaseLockRequest) (*corepb.ReleaseLockResponse, error)
	DeleteLock(request *corepb.DeleteLockRequest) (*corepb.DeleteLockResponse, error)
	GetLock(request *corepb.GetLockRequest) (*corepb.GetLockResponse, error)
}

type NamespacesCoreApi interface {
	Snapshot() monstera.ApplicationCoreSnapshot
	Restore(reader io.ReadCloser) error
	Close()
	GetNamespace(request *corepb.GetNamespaceRequest) (*corepb.GetNamespaceResponse, error)
	ListNamespaces(request *corepb.ListNamespacesRequest) (*corepb.ListNamespacesResponse, error)
	CreateNamespace(request *corepb.CreateNamespaceRequest) (*corepb.CreateNamespaceResponse, error)
	UpdateNamespace(request *corepb.UpdateNamespaceRequest) (*corepb.UpdateNamespaceResponse, error)
	DeleteNamespace(request *corepb.DeleteNamespaceRequest) (*corepb.DeleteNamespaceResponse, error)
}
